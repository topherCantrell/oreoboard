pub getProgram
  return @zoeProgram

DAT
zoeProgram

'config
  byte 12
  byte 192
  byte 24
  byte 1

'eventInput
  byte 1, "INIT",0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0

'palette  ' 64 longs (64 colors)
  long 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  long 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  long 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  long 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

'patterns ' 16 pointers
  word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

'callstack ' 32 pointers
  word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

'variables ' Variable storage (2 bytes each)
  word 0

'pixbuffer ' 1 byte per pixel
  byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

'events
  byte "INIT",0, $00,$08
  byte $FF

'INIT_handler
  '  var delay
  '  configure (out=D4, length=192, hasWhite=false)
  byte $09,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 '   defineColor(color=0,   W=0, R=0,   G=0,   B=0)    // Color 0  : Black   
  byte $09,$00,$01,$00,$00,$00,$00,$00,$64,$00,$00 '   defineColor(color=1,   W=0, R=100, G=0,   B=0)    // Color 1  : Red
  byte $09,$00,$02,$00,$00,$00,$50,$00,$78,$00,$04 '   defineColor(color=2,   W=0, R=120, G=80,  B=4)   // Color 2  : Yellow(ish)      
  byte $09,$00,$08,$00,$00,$00,$00,$00,$00,$00,$64 '   defineColor(color=8,   W=0, R=0,   G=0,   B=100)  // Color 8  : Blue   
  byte $09,$00,$09,$00,$00,$00,$32,$00,$32,$00,$32 '   defineColor(color=9,   W=0, R=50,  G=50,  B=50)   // Color 9  : White
  byte $09,$00,$0A,$00,$00,$00,$32,$00,$32,$00,$32 '   defineColor(color=10,  W=0, R=50,  G=50,  B=50)   // Color 10 : White
  byte $09,$00,$0B,$00,$00,$00,$00,$00,$64,$00,$00 '   defineColor(color=11,  W=0, R=100, G=0,   B=0)    // Color 16 : Red   
  byte $09,$00,$0C,$00,$00,$00,$32,$00,$32,$00,$32 '   defineColor(color=12,  W=0, R=50,  G=50,  B=50)   // Color 17 : White
  byte $09,$00,$0D,$00,$00,$00,$32,$00,$32,$00,$32 '   defineColor(color=13,  W=0, R=50,  G=50,  B=50)   // Color 18 : White
  byte $09,$00,$14,$00,$00,$00,$00,$00,$64,$00,$00 '   defineColor(color=20,  W=0, R=100, G=0, B=0) // Color 20 : Team Red
  byte $09,$00,$15,$00,$00,$00,$00,$00,$00,$00,$64 '   defineColor(color=21,  W=0, R=0, G=0, B=100) // Color 21 : Team Blue
  byte $09,$00,$16,$00,$00,$00,$05,$00,$05,$00,$05 '   defineColor(color=22,  W=0, R=5, G=5, B=5)   // Color 22 : Team Neutral
  byte $0B,$00,$05,$07,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01 '   pattern(number=0) {
  '      11111
  '      1....
  '      1....
  '      .111.
  '      ....1
  '      ....1
  '      11111
  '  }
  byte $0B,$01,$05,$07,$02,$02,$02,$02,$02,$02,$00,$00,$00,$02,$02,$00,$00,$00,$02,$00,$02,$02,$02,$00,$02,$00,$00,$00,$02,$02,$00,$00,$00,$02,$02,$02,$02,$02,$02 '   pattern(number=1) {
  '      22222
  '      2...2
  '      2...2
  '      .222.
  '      2...2
  '      2...2
  '      22222
  '  }  
  byte $0B,$02,$04,$06,$01,$01,$01,$01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$01,$00,$00,$00,$01,$01,$01,$01,$01 '   pattern(number=2) {
  '      1111
  '      1...
  '      111.
  '      ...1
  '      ...1
  '      1111
  '  }
  byte $0B,$03,$04,$06,$02,$02,$02,$02,$02,$00,$00,$02,$00,$02,$02,$00,$02,$00,$00,$02,$02,$00,$00,$02,$02,$02,$02,$02 '   pattern(number=3) {
  '      2222
  '      2..2
  '      .22.
  '      2..2
  '      2..2
  '      2222
  '  }  
  byte $0B,$04,$03,$05,$01,$01,$01,$01,$00,$00,$01,$01,$01,$00,$00,$01,$01,$01,$01 '   pattern(number=4) {
  '      111
  '      1..
  '      111
  '      ..1
  '      111
  '  }
  byte $0B,$05,$03,$05,$02,$02,$02,$02,$00,$02,$02,$02,$02,$02,$00,$02,$02,$02,$02 '   pattern(number=5) {
  '      222
  '      2.2
  '      222
  '      2.2
  '      222
  '  }  
  byte $0B,$06,$0B,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 '   pattern(number=6) {
  '      ...........
  '      ...........
  '      ...........
  '      ...........
  '      8..........
  '      8..........
  '      8..........
  '      ...........
  '  }
  byte $0B,$07,$0B,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 '   pattern(number=7) {
  '      ...........
  '      .8.........
  '      .8.........
  '      88.........
  '      88.........
  '      8..........
  '      ...........
  '      8..........
  '  }
  byte $0B,$08,$0B,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 '   pattern(number=8) {
  '      8..........
  '      ...........
  '      8..........
  '      88.........
  '      888........
  '      8.8........
  '      8.8........
  '      ...........
  '  }
  byte $0B,$09,$0B,$08,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$08,$08,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00 '   pattern(number=9) {
  '      .8.........
  '      8..8.......
  '      88.8.......
  '      .888.......
  '      8888.......
  '      888........
  '      .8.........
  '      ..8........
  '  }
  byte $0B,$0A,$0B,$08,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$08,$08,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$08,$08,$08,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$08,$00,$00,$00,$00,$00,$00,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00 '   pattern(number=10) {
  '      ..8........
  '      .8.........
  '      888........
  '      8.88.......
  '      88888......
  '      888.8......
  '      ..8.8......
  '      88.........
  '  }
  byte $0B,$0B,$0B,$08,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$08,$00,$00,$00,$00,$00,$08,$08,$08,$08,$00,$08,$00,$00,$00,$00,$00,$08,$08,$00,$08,$08,$08,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00 '   pattern(number=11) {
  '      ...8.......
  '      ..8..8.....
  '      8888.8.....
  '      88.888.....
  '      888888.....
  '      88888......
  '      ...8.......
  '      ....8......
  '  }
  byte $0B,$0C,$0B,$08,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$08,$08,$08,$00,$08,$08,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$08,$08,$08,$08,$08,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$08,$00,$00,$00,$00,$08,$00,$08,$08,$00,$00,$00,$00,$00,$00,$00 '   pattern(number=12) {
  '      ....8......
  '      ...8.......
  '      88888......
  '      888.88.....
  '      8888888....
  '      88888.8....
  '      ....8.8....
  '      8.88.......
  '  }
  byte $0B,$0D,$0B,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$08,$00,$00,$08,$00,$00,$00,$08,$08,$08,$08,$08,$08,$00,$08,$00,$00,$00,$00,$08,$08,$08,$00,$08,$08,$08,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00 '   pattern(number=13) {
  '      .....8.....
  '      8...8..8...
  '      888888.8...
  '      .888.888...
  '      88888888...
  '      8888888....
  '      .....8.....
  '      ......8....
  '  }
  byte $0B,$0E,$0B,$08,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$08,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$08,$00,$08,$08,$08,$00,$08,$08,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$08,$08,$08,$08,$08,$08,$08,$00,$08,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$08,$00,$00,$00,$08,$08,$00,$08,$08,$00,$00,$00,$00,$00 '   pattern(number=14) {
  '      8.....8....
  '      .8...8.....
  '      8888888....
  '      8.888.88...
  '      888888888..
  '      8888888.8..
  '      8.....8.8..
  '      .88.88.....
  '  }
  byte $0B,$0F,$0B,$08,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$08,$00,$00,$08,$00,$00,$08,$08,$08,$08,$08,$08,$08,$00,$08,$00,$08,$08,$00,$08,$08,$08,$00,$08,$08,$08,$00,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$00,$08,$08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00 '   pattern(number=15) {
  '      .8.....8...
  '      ..8...8..8.
  '      .8888888.8.
  '      88.888.888.
  '      8888888888.
  '      888888888..
  '      .8.....8...
  '      8.......8..
  '  }
  byte $0B,$10,$0B,$08,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$08,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$08,$08,$00,$08,$08,$08,$00,$08,$08,$00,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$00,$08,$08,$08,$08,$08,$08,$08,$00,$08,$08,$00,$08,$00,$00,$00,$00,$00,$08,$00,$08,$00,$00,$00,$08,$08,$00,$08,$08,$00,$00,$00 '   pattern(number=16) {
  '      ..8.....8..
  '      ...8...8...
  '      ..8888888..
  '      .88.888.88.
  '      88888888888
  '      8.8888888.8
  '      8.8.....8.8
  '      ...88.88...
  '  }
  byte $0B,$11,$0B,$08,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$08,$00,$00,$08,$00,$00,$00,$08,$00,$00,$08,$08,$00,$08,$08,$08,$08,$08,$08,$08,$00,$08,$08,$08,$08,$00,$08,$08,$08,$00,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$00,$08,$08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$08,$00,$00,$00,$00,$00,$08,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$08,$00 '   pattern(number=17) {
  '      ..8.....8..
  '      8..8...8..8
  '      8.8888888.8
  '      888.888.888
  '      88888888888
  '      .888888888.
  '      ..8.....8..
  '      .8.......8.
  '  }
  byte $04,$00,$00,$FA '   [delay] = 250
  'TOP:
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$06,$00,$00,$00,$00,$00,$00 '   drawPattern(number=6, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$07,$00,$00,$00,$00,$00,$00 '   drawPattern(number=7, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$08,$00,$00,$00,$00,$00,$00 '   drawPattern(number=8, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$09,$00,$00,$00,$00,$00,$00 '   drawPattern(number=9, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0A,$00,$00,$00,$00,$00,$00 '   drawPattern(number=10, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0B,$00,$00,$00,$00,$00,$00 '   drawPattern(number=11, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0C,$00,$00,$00,$00,$00,$00 '   drawPattern(number=12, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0D,$00,$00,$00,$00,$00,$00 '   drawPattern(number=13, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0E,$00,$00,$00,$00,$00,$00 '   drawPattern(number=14, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0F,$00,$00,$00,$00,$00,$00 '   drawPattern(number=15, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$01,$00,$00,$00,$00 '   drawPattern(number=16, x=1, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$02,$00,$00,$00,$00 '   drawPattern(number=17, x=2, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$03,$00,$00,$00,$00 '   drawPattern(number=16, x=3, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$04,$00,$00,$00,$00 '   drawPattern(number=17, x=4, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$05,$00,$00,$00,$00 '   drawPattern(number=16, x=5, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$06,$00,$00,$00,$00 '   drawPattern(number=17, x=6, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$07,$00,$00,$00,$00 '   drawPattern(number=16, x=7, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$08,$00,$00,$00,$00 '   drawPattern(number=17, x=8, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$09,$00,$00,$00,$00 '   drawPattern(number=16, x=9, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$0A,$00,$00,$00,$00 '   drawPattern(number=17, x=10, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$0B,$00,$00,$00,$00 '   drawPattern(number=16, x=11, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$0C,$00,$00,$00,$00 '   drawPattern(number=17, x=12, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$0B,$00,$00,$00,$00 '   drawPattern(number=16, x=11, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$0A,$00,$00,$00,$00 '   drawPattern(number=17, x=10, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$09,$00,$00,$00,$00 '   drawPattern(number=16, x=9, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$08,$00,$00,$00,$00 '   drawPattern(number=17, x=8, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$07,$00,$00,$00,$00 '   drawPattern(number=16, x=7, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$06,$00,$00,$00,$00 '   drawPattern(number=17, x=6, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$05,$00,$00,$00,$00 '   drawPattern(number=16, x=5, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$04,$00,$00,$00,$00 '   drawPattern(number=17, x=4, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$03,$00,$00,$00,$00 '   drawPattern(number=16, x=3, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$02,$00,$00,$00,$00 '   drawPattern(number=17, x=2, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$10,$00,$01,$00,$00,$00,$00 '   drawPattern(number=16, x=1, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0)
  byte $0C,$00,$11,$00,$00,$00,$00,$00,$00 '   drawPattern(number=17, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0F,$00,$00,$00,$00,$00,$00 '   drawPattern(number=15, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0E,$00,$00,$00,$00,$00,$00 '   drawPattern(number=14, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0D,$00,$00,$00,$00,$00,$00 '   drawPattern(number=13, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0C,$00,$00,$00,$00,$00,$00 '   drawPattern(number=12, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0B,$00,$00,$00,$00,$00,$00 '   drawPattern(number=11, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$0A,$00,$00,$00,$00,$00,$00 '   drawPattern(number=10, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$09,$00,$00,$00,$00,$00,$00 '   drawPattern(number=9, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$08,$00,$00,$00,$00,$00,$00 '   drawPattern(number=8, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$07,$00,$00,$00,$00,$00,$00 '   drawPattern(number=7, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0C,$00,$06,$00,$00,$00,$00,$00,$00 '   drawPattern(number=6, x=0, y=0)  
  byte $01,$80,$00 '   pause(time=[delay])
  byte $0A,$00,$00 '   solid(color=0) 
  byte $01,$03,$E8 '   pause(time=1000)
  byte $0C,$00,$00,$00,$00,$00,$00,$00,$00 '   drawPattern(number=0,  x=0,  y=0)
  byte $0C,$00,$01,$00,$06,$00,$00,$00,$00 '   drawPattern(number=1,  x=6,  y=0)
  byte $0C,$00,$00,$00,$0C,$00,$00,$00,$00 '   drawPattern(number=0,  x=12, y=0)
  byte $0C,$00,$01,$00,$12,$00,$00,$00,$00 '   drawPattern(number=1,  x=18, y=0)
  byte $01,$13,$88 '   pause(time=5000)
  byte $03,$FD,$75 '   goto(top)
  byte $08 ' }

